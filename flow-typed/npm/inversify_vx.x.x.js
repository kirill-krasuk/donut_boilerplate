// flow-typed signature: 09316118e45ad2af524f2d8b826b02cc
// flow-typed version: <<STUB>>/inversify_v^5.0.1/flow_v0.104.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'inversify'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'inversify' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'inversify/amd/annotation/decorator_utils' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/inject' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/injectable' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/multi_inject' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/named' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/optional' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/post_construct' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/tagged' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/target_name' {
  declare module.exports: any;
}

declare module 'inversify/amd/annotation/unmanaged' {
  declare module.exports: any;
}

declare module 'inversify/amd/bindings/binding_count' {
  declare module.exports: any;
}

declare module 'inversify/amd/bindings/binding' {
  declare module.exports: any;
}

declare module 'inversify/amd/constants/error_msgs' {
  declare module.exports: any;
}

declare module 'inversify/amd/constants/literal_types' {
  declare module.exports: any;
}

declare module 'inversify/amd/constants/metadata_keys' {
  declare module.exports: any;
}

declare module 'inversify/amd/container/container_module' {
  declare module.exports: any;
}

declare module 'inversify/amd/container/container_snapshot' {
  declare module.exports: any;
}

declare module 'inversify/amd/container/container' {
  declare module.exports: any;
}

declare module 'inversify/amd/container/lookup' {
  declare module.exports: any;
}

declare module 'inversify/amd/interfaces/interfaces' {
  declare module.exports: any;
}

declare module 'inversify/amd/inversify' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/context' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/metadata_reader' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/metadata' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/plan' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/planner' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/queryable_string' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/reflection_utils' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/request' {
  declare module.exports: any;
}

declare module 'inversify/amd/planning/target' {
  declare module.exports: any;
}

declare module 'inversify/amd/resolution/instantiation' {
  declare module.exports: any;
}

declare module 'inversify/amd/resolution/resolver' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/binding_in_syntax' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/binding_in_when_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/binding_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/binding_to_syntax' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/binding_when_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/binding_when_syntax' {
  declare module.exports: any;
}

declare module 'inversify/amd/syntax/constraint_helpers' {
  declare module.exports: any;
}

declare module 'inversify/amd/utils/binding_utils' {
  declare module.exports: any;
}

declare module 'inversify/amd/utils/exceptions' {
  declare module.exports: any;
}

declare module 'inversify/amd/utils/id' {
  declare module.exports: any;
}

declare module 'inversify/amd/utils/serialization' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/decorator_utils' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/inject' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/injectable' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/multi_inject' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/named' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/optional' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/post_construct' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/tagged' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/target_name' {
  declare module.exports: any;
}

declare module 'inversify/es/annotation/unmanaged' {
  declare module.exports: any;
}

declare module 'inversify/es/bindings/binding_count' {
  declare module.exports: any;
}

declare module 'inversify/es/bindings/binding' {
  declare module.exports: any;
}

declare module 'inversify/es/constants/error_msgs' {
  declare module.exports: any;
}

declare module 'inversify/es/constants/literal_types' {
  declare module.exports: any;
}

declare module 'inversify/es/constants/metadata_keys' {
  declare module.exports: any;
}

declare module 'inversify/es/container/container_module' {
  declare module.exports: any;
}

declare module 'inversify/es/container/container_snapshot' {
  declare module.exports: any;
}

declare module 'inversify/es/container/container' {
  declare module.exports: any;
}

declare module 'inversify/es/container/lookup' {
  declare module.exports: any;
}

declare module 'inversify/es/interfaces/interfaces' {
  declare module.exports: any;
}

declare module 'inversify/es/inversify' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/context' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/metadata_reader' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/metadata' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/plan' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/planner' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/queryable_string' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/reflection_utils' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/request' {
  declare module.exports: any;
}

declare module 'inversify/es/planning/target' {
  declare module.exports: any;
}

declare module 'inversify/es/resolution/instantiation' {
  declare module.exports: any;
}

declare module 'inversify/es/resolution/resolver' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/binding_in_syntax' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/binding_in_when_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/binding_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/binding_to_syntax' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/binding_when_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/binding_when_syntax' {
  declare module.exports: any;
}

declare module 'inversify/es/syntax/constraint_helpers' {
  declare module.exports: any;
}

declare module 'inversify/es/utils/binding_utils' {
  declare module.exports: any;
}

declare module 'inversify/es/utils/exceptions' {
  declare module.exports: any;
}

declare module 'inversify/es/utils/id' {
  declare module.exports: any;
}

declare module 'inversify/es/utils/serialization' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/decorator_utils' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/inject' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/injectable' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/multi_inject' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/named' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/optional' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/post_construct' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/tagged' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/target_name' {
  declare module.exports: any;
}

declare module 'inversify/lib/annotation/unmanaged' {
  declare module.exports: any;
}

declare module 'inversify/lib/bindings/binding_count' {
  declare module.exports: any;
}

declare module 'inversify/lib/bindings/binding' {
  declare module.exports: any;
}

declare module 'inversify/lib/constants/error_msgs' {
  declare module.exports: any;
}

declare module 'inversify/lib/constants/literal_types' {
  declare module.exports: any;
}

declare module 'inversify/lib/constants/metadata_keys' {
  declare module.exports: any;
}

declare module 'inversify/lib/container/container_module' {
  declare module.exports: any;
}

declare module 'inversify/lib/container/container_snapshot' {
  declare module.exports: any;
}

declare module 'inversify/lib/container/container' {
  declare module.exports: any;
}

declare module 'inversify/lib/container/lookup' {
  declare module.exports: any;
}

declare module 'inversify/lib/interfaces/interfaces' {
  declare module.exports: any;
}

declare module 'inversify/lib/inversify' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/context' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/metadata_reader' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/metadata' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/plan' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/planner' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/queryable_string' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/reflection_utils' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/request' {
  declare module.exports: any;
}

declare module 'inversify/lib/planning/target' {
  declare module.exports: any;
}

declare module 'inversify/lib/resolution/instantiation' {
  declare module.exports: any;
}

declare module 'inversify/lib/resolution/resolver' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/binding_in_syntax' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/binding_in_when_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/binding_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/binding_to_syntax' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/binding_when_on_syntax' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/binding_when_syntax' {
  declare module.exports: any;
}

declare module 'inversify/lib/syntax/constraint_helpers' {
  declare module.exports: any;
}

declare module 'inversify/lib/utils/binding_utils' {
  declare module.exports: any;
}

declare module 'inversify/lib/utils/exceptions' {
  declare module.exports: any;
}

declare module 'inversify/lib/utils/id' {
  declare module.exports: any;
}

declare module 'inversify/lib/utils/serialization' {
  declare module.exports: any;
}

// Filename aliases
declare module 'inversify/amd/annotation/decorator_utils.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/decorator_utils'>;
}
declare module 'inversify/amd/annotation/inject.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/inject'>;
}
declare module 'inversify/amd/annotation/injectable.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/injectable'>;
}
declare module 'inversify/amd/annotation/multi_inject.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/multi_inject'>;
}
declare module 'inversify/amd/annotation/named.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/named'>;
}
declare module 'inversify/amd/annotation/optional.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/optional'>;
}
declare module 'inversify/amd/annotation/post_construct.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/post_construct'>;
}
declare module 'inversify/amd/annotation/tagged.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/tagged'>;
}
declare module 'inversify/amd/annotation/target_name.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/target_name'>;
}
declare module 'inversify/amd/annotation/unmanaged.js' {
  declare module.exports: $Exports<'inversify/amd/annotation/unmanaged'>;
}
declare module 'inversify/amd/bindings/binding_count.js' {
  declare module.exports: $Exports<'inversify/amd/bindings/binding_count'>;
}
declare module 'inversify/amd/bindings/binding.js' {
  declare module.exports: $Exports<'inversify/amd/bindings/binding'>;
}
declare module 'inversify/amd/constants/error_msgs.js' {
  declare module.exports: $Exports<'inversify/amd/constants/error_msgs'>;
}
declare module 'inversify/amd/constants/literal_types.js' {
  declare module.exports: $Exports<'inversify/amd/constants/literal_types'>;
}
declare module 'inversify/amd/constants/metadata_keys.js' {
  declare module.exports: $Exports<'inversify/amd/constants/metadata_keys'>;
}
declare module 'inversify/amd/container/container_module.js' {
  declare module.exports: $Exports<'inversify/amd/container/container_module'>;
}
declare module 'inversify/amd/container/container_snapshot.js' {
  declare module.exports: $Exports<'inversify/amd/container/container_snapshot'>;
}
declare module 'inversify/amd/container/container.js' {
  declare module.exports: $Exports<'inversify/amd/container/container'>;
}
declare module 'inversify/amd/container/lookup.js' {
  declare module.exports: $Exports<'inversify/amd/container/lookup'>;
}
declare module 'inversify/amd/interfaces/interfaces.js' {
  declare module.exports: $Exports<'inversify/amd/interfaces/interfaces'>;
}
declare module 'inversify/amd/inversify.js' {
  declare module.exports: $Exports<'inversify/amd/inversify'>;
}
declare module 'inversify/amd/planning/context.js' {
  declare module.exports: $Exports<'inversify/amd/planning/context'>;
}
declare module 'inversify/amd/planning/metadata_reader.js' {
  declare module.exports: $Exports<'inversify/amd/planning/metadata_reader'>;
}
declare module 'inversify/amd/planning/metadata.js' {
  declare module.exports: $Exports<'inversify/amd/planning/metadata'>;
}
declare module 'inversify/amd/planning/plan.js' {
  declare module.exports: $Exports<'inversify/amd/planning/plan'>;
}
declare module 'inversify/amd/planning/planner.js' {
  declare module.exports: $Exports<'inversify/amd/planning/planner'>;
}
declare module 'inversify/amd/planning/queryable_string.js' {
  declare module.exports: $Exports<'inversify/amd/planning/queryable_string'>;
}
declare module 'inversify/amd/planning/reflection_utils.js' {
  declare module.exports: $Exports<'inversify/amd/planning/reflection_utils'>;
}
declare module 'inversify/amd/planning/request.js' {
  declare module.exports: $Exports<'inversify/amd/planning/request'>;
}
declare module 'inversify/amd/planning/target.js' {
  declare module.exports: $Exports<'inversify/amd/planning/target'>;
}
declare module 'inversify/amd/resolution/instantiation.js' {
  declare module.exports: $Exports<'inversify/amd/resolution/instantiation'>;
}
declare module 'inversify/amd/resolution/resolver.js' {
  declare module.exports: $Exports<'inversify/amd/resolution/resolver'>;
}
declare module 'inversify/amd/syntax/binding_in_syntax.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/binding_in_syntax'>;
}
declare module 'inversify/amd/syntax/binding_in_when_on_syntax.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/binding_in_when_on_syntax'>;
}
declare module 'inversify/amd/syntax/binding_on_syntax.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/binding_on_syntax'>;
}
declare module 'inversify/amd/syntax/binding_to_syntax.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/binding_to_syntax'>;
}
declare module 'inversify/amd/syntax/binding_when_on_syntax.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/binding_when_on_syntax'>;
}
declare module 'inversify/amd/syntax/binding_when_syntax.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/binding_when_syntax'>;
}
declare module 'inversify/amd/syntax/constraint_helpers.js' {
  declare module.exports: $Exports<'inversify/amd/syntax/constraint_helpers'>;
}
declare module 'inversify/amd/utils/binding_utils.js' {
  declare module.exports: $Exports<'inversify/amd/utils/binding_utils'>;
}
declare module 'inversify/amd/utils/exceptions.js' {
  declare module.exports: $Exports<'inversify/amd/utils/exceptions'>;
}
declare module 'inversify/amd/utils/id.js' {
  declare module.exports: $Exports<'inversify/amd/utils/id'>;
}
declare module 'inversify/amd/utils/serialization.js' {
  declare module.exports: $Exports<'inversify/amd/utils/serialization'>;
}
declare module 'inversify/es/annotation/decorator_utils.js' {
  declare module.exports: $Exports<'inversify/es/annotation/decorator_utils'>;
}
declare module 'inversify/es/annotation/inject.js' {
  declare module.exports: $Exports<'inversify/es/annotation/inject'>;
}
declare module 'inversify/es/annotation/injectable.js' {
  declare module.exports: $Exports<'inversify/es/annotation/injectable'>;
}
declare module 'inversify/es/annotation/multi_inject.js' {
  declare module.exports: $Exports<'inversify/es/annotation/multi_inject'>;
}
declare module 'inversify/es/annotation/named.js' {
  declare module.exports: $Exports<'inversify/es/annotation/named'>;
}
declare module 'inversify/es/annotation/optional.js' {
  declare module.exports: $Exports<'inversify/es/annotation/optional'>;
}
declare module 'inversify/es/annotation/post_construct.js' {
  declare module.exports: $Exports<'inversify/es/annotation/post_construct'>;
}
declare module 'inversify/es/annotation/tagged.js' {
  declare module.exports: $Exports<'inversify/es/annotation/tagged'>;
}
declare module 'inversify/es/annotation/target_name.js' {
  declare module.exports: $Exports<'inversify/es/annotation/target_name'>;
}
declare module 'inversify/es/annotation/unmanaged.js' {
  declare module.exports: $Exports<'inversify/es/annotation/unmanaged'>;
}
declare module 'inversify/es/bindings/binding_count.js' {
  declare module.exports: $Exports<'inversify/es/bindings/binding_count'>;
}
declare module 'inversify/es/bindings/binding.js' {
  declare module.exports: $Exports<'inversify/es/bindings/binding'>;
}
declare module 'inversify/es/constants/error_msgs.js' {
  declare module.exports: $Exports<'inversify/es/constants/error_msgs'>;
}
declare module 'inversify/es/constants/literal_types.js' {
  declare module.exports: $Exports<'inversify/es/constants/literal_types'>;
}
declare module 'inversify/es/constants/metadata_keys.js' {
  declare module.exports: $Exports<'inversify/es/constants/metadata_keys'>;
}
declare module 'inversify/es/container/container_module.js' {
  declare module.exports: $Exports<'inversify/es/container/container_module'>;
}
declare module 'inversify/es/container/container_snapshot.js' {
  declare module.exports: $Exports<'inversify/es/container/container_snapshot'>;
}
declare module 'inversify/es/container/container.js' {
  declare module.exports: $Exports<'inversify/es/container/container'>;
}
declare module 'inversify/es/container/lookup.js' {
  declare module.exports: $Exports<'inversify/es/container/lookup'>;
}
declare module 'inversify/es/interfaces/interfaces.js' {
  declare module.exports: $Exports<'inversify/es/interfaces/interfaces'>;
}
declare module 'inversify/es/inversify.js' {
  declare module.exports: $Exports<'inversify/es/inversify'>;
}
declare module 'inversify/es/planning/context.js' {
  declare module.exports: $Exports<'inversify/es/planning/context'>;
}
declare module 'inversify/es/planning/metadata_reader.js' {
  declare module.exports: $Exports<'inversify/es/planning/metadata_reader'>;
}
declare module 'inversify/es/planning/metadata.js' {
  declare module.exports: $Exports<'inversify/es/planning/metadata'>;
}
declare module 'inversify/es/planning/plan.js' {
  declare module.exports: $Exports<'inversify/es/planning/plan'>;
}
declare module 'inversify/es/planning/planner.js' {
  declare module.exports: $Exports<'inversify/es/planning/planner'>;
}
declare module 'inversify/es/planning/queryable_string.js' {
  declare module.exports: $Exports<'inversify/es/planning/queryable_string'>;
}
declare module 'inversify/es/planning/reflection_utils.js' {
  declare module.exports: $Exports<'inversify/es/planning/reflection_utils'>;
}
declare module 'inversify/es/planning/request.js' {
  declare module.exports: $Exports<'inversify/es/planning/request'>;
}
declare module 'inversify/es/planning/target.js' {
  declare module.exports: $Exports<'inversify/es/planning/target'>;
}
declare module 'inversify/es/resolution/instantiation.js' {
  declare module.exports: $Exports<'inversify/es/resolution/instantiation'>;
}
declare module 'inversify/es/resolution/resolver.js' {
  declare module.exports: $Exports<'inversify/es/resolution/resolver'>;
}
declare module 'inversify/es/syntax/binding_in_syntax.js' {
  declare module.exports: $Exports<'inversify/es/syntax/binding_in_syntax'>;
}
declare module 'inversify/es/syntax/binding_in_when_on_syntax.js' {
  declare module.exports: $Exports<'inversify/es/syntax/binding_in_when_on_syntax'>;
}
declare module 'inversify/es/syntax/binding_on_syntax.js' {
  declare module.exports: $Exports<'inversify/es/syntax/binding_on_syntax'>;
}
declare module 'inversify/es/syntax/binding_to_syntax.js' {
  declare module.exports: $Exports<'inversify/es/syntax/binding_to_syntax'>;
}
declare module 'inversify/es/syntax/binding_when_on_syntax.js' {
  declare module.exports: $Exports<'inversify/es/syntax/binding_when_on_syntax'>;
}
declare module 'inversify/es/syntax/binding_when_syntax.js' {
  declare module.exports: $Exports<'inversify/es/syntax/binding_when_syntax'>;
}
declare module 'inversify/es/syntax/constraint_helpers.js' {
  declare module.exports: $Exports<'inversify/es/syntax/constraint_helpers'>;
}
declare module 'inversify/es/utils/binding_utils.js' {
  declare module.exports: $Exports<'inversify/es/utils/binding_utils'>;
}
declare module 'inversify/es/utils/exceptions.js' {
  declare module.exports: $Exports<'inversify/es/utils/exceptions'>;
}
declare module 'inversify/es/utils/id.js' {
  declare module.exports: $Exports<'inversify/es/utils/id'>;
}
declare module 'inversify/es/utils/serialization.js' {
  declare module.exports: $Exports<'inversify/es/utils/serialization'>;
}
declare module 'inversify/lib/annotation/decorator_utils.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/decorator_utils'>;
}
declare module 'inversify/lib/annotation/inject.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/inject'>;
}
declare module 'inversify/lib/annotation/injectable.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/injectable'>;
}
declare module 'inversify/lib/annotation/multi_inject.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/multi_inject'>;
}
declare module 'inversify/lib/annotation/named.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/named'>;
}
declare module 'inversify/lib/annotation/optional.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/optional'>;
}
declare module 'inversify/lib/annotation/post_construct.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/post_construct'>;
}
declare module 'inversify/lib/annotation/tagged.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/tagged'>;
}
declare module 'inversify/lib/annotation/target_name.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/target_name'>;
}
declare module 'inversify/lib/annotation/unmanaged.js' {
  declare module.exports: $Exports<'inversify/lib/annotation/unmanaged'>;
}
declare module 'inversify/lib/bindings/binding_count.js' {
  declare module.exports: $Exports<'inversify/lib/bindings/binding_count'>;
}
declare module 'inversify/lib/bindings/binding.js' {
  declare module.exports: $Exports<'inversify/lib/bindings/binding'>;
}
declare module 'inversify/lib/constants/error_msgs.js' {
  declare module.exports: $Exports<'inversify/lib/constants/error_msgs'>;
}
declare module 'inversify/lib/constants/literal_types.js' {
  declare module.exports: $Exports<'inversify/lib/constants/literal_types'>;
}
declare module 'inversify/lib/constants/metadata_keys.js' {
  declare module.exports: $Exports<'inversify/lib/constants/metadata_keys'>;
}
declare module 'inversify/lib/container/container_module.js' {
  declare module.exports: $Exports<'inversify/lib/container/container_module'>;
}
declare module 'inversify/lib/container/container_snapshot.js' {
  declare module.exports: $Exports<'inversify/lib/container/container_snapshot'>;
}
declare module 'inversify/lib/container/container.js' {
  declare module.exports: $Exports<'inversify/lib/container/container'>;
}
declare module 'inversify/lib/container/lookup.js' {
  declare module.exports: $Exports<'inversify/lib/container/lookup'>;
}
declare module 'inversify/lib/interfaces/interfaces.js' {
  declare module.exports: $Exports<'inversify/lib/interfaces/interfaces'>;
}
declare module 'inversify/lib/inversify.js' {
  declare module.exports: $Exports<'inversify/lib/inversify'>;
}
declare module 'inversify/lib/planning/context.js' {
  declare module.exports: $Exports<'inversify/lib/planning/context'>;
}
declare module 'inversify/lib/planning/metadata_reader.js' {
  declare module.exports: $Exports<'inversify/lib/planning/metadata_reader'>;
}
declare module 'inversify/lib/planning/metadata.js' {
  declare module.exports: $Exports<'inversify/lib/planning/metadata'>;
}
declare module 'inversify/lib/planning/plan.js' {
  declare module.exports: $Exports<'inversify/lib/planning/plan'>;
}
declare module 'inversify/lib/planning/planner.js' {
  declare module.exports: $Exports<'inversify/lib/planning/planner'>;
}
declare module 'inversify/lib/planning/queryable_string.js' {
  declare module.exports: $Exports<'inversify/lib/planning/queryable_string'>;
}
declare module 'inversify/lib/planning/reflection_utils.js' {
  declare module.exports: $Exports<'inversify/lib/planning/reflection_utils'>;
}
declare module 'inversify/lib/planning/request.js' {
  declare module.exports: $Exports<'inversify/lib/planning/request'>;
}
declare module 'inversify/lib/planning/target.js' {
  declare module.exports: $Exports<'inversify/lib/planning/target'>;
}
declare module 'inversify/lib/resolution/instantiation.js' {
  declare module.exports: $Exports<'inversify/lib/resolution/instantiation'>;
}
declare module 'inversify/lib/resolution/resolver.js' {
  declare module.exports: $Exports<'inversify/lib/resolution/resolver'>;
}
declare module 'inversify/lib/syntax/binding_in_syntax.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/binding_in_syntax'>;
}
declare module 'inversify/lib/syntax/binding_in_when_on_syntax.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/binding_in_when_on_syntax'>;
}
declare module 'inversify/lib/syntax/binding_on_syntax.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/binding_on_syntax'>;
}
declare module 'inversify/lib/syntax/binding_to_syntax.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/binding_to_syntax'>;
}
declare module 'inversify/lib/syntax/binding_when_on_syntax.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/binding_when_on_syntax'>;
}
declare module 'inversify/lib/syntax/binding_when_syntax.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/binding_when_syntax'>;
}
declare module 'inversify/lib/syntax/constraint_helpers.js' {
  declare module.exports: $Exports<'inversify/lib/syntax/constraint_helpers'>;
}
declare module 'inversify/lib/utils/binding_utils.js' {
  declare module.exports: $Exports<'inversify/lib/utils/binding_utils'>;
}
declare module 'inversify/lib/utils/exceptions.js' {
  declare module.exports: $Exports<'inversify/lib/utils/exceptions'>;
}
declare module 'inversify/lib/utils/id.js' {
  declare module.exports: $Exports<'inversify/lib/utils/id'>;
}
declare module 'inversify/lib/utils/serialization.js' {
  declare module.exports: $Exports<'inversify/lib/utils/serialization'>;
}
