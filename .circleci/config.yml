version: 2.1

aliases:
    - &restore_yarn_cache
        restore_cache:
            name: Restore yarn cache
            key: v2-node-{{ arch }}-{{ checksum "yarn.lock" }}-yarn

    - &node_image
        - image: node:15.8.0
        

commands:
    initial:
        steps:
        - checkout
        - restore_cache:
            name: Restore Yarn Package Cache
            keys:
                - yarn-packages-{{ checksum "yarn.lock" }}
        - run:
            name: Install Dependencies
            command: yarn install --immutable
        - save_cache:
            name: Save Yarn Package Cache
            key: yarn-packages-{{ checksum "yarn.lock" }}
            paths:
                - .yarn/cache
                - .yarn/unplugged
        - persist_to_workspace:
            root: ./
            paths:
                - ./
    build:
        steps:
        - attach_workspace:
            at: ./
        - run: 
            name: Setting Environment
            command: cp .env.example .env
        - run: 
            name: Building production version
            command: yarn bundle
        - run: 
            name: Echo build logs
            command: cat ./logs/server_bundle.error.log
        - run: 
            name: Echo build logs
            command: cat ./logs/client_bundle.error.log

jobs:
    setup:
        docker: *node_image
        
        steps:
        - initial
    build: 
        docker: *node_image
        steps:
        - checkout
        - build
        
    test:
        docker: *node_image
        parallelism: 5
        steps:
        - checkout
        - attach_workspace:
            at: ./
        - run: 
            name: Run Test
            command: |
                TEST=$(circleci tests glob **/__tests__/*.(j|t)sx? | circleci tests split --split-by=timings)
                yarn test $TEST

workflows:
    version: 2
    build-and-test:
        jobs:
        - setup
        - build:
            requires:
                - setup
        - test:
            requires:
                - setup